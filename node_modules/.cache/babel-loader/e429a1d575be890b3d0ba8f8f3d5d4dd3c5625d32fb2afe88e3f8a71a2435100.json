{"ast":null,"code":"var _jsxFileName = \"H:\\\\Programaci\\xF3n\\\\Henry\\\\PI-Countries\\\\PI-Countries-main\\\\PI-Countries-main\\\\client\\\\src\\\\views\\\\home\\\\home.component.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getByName, getCountries, getCurrentPages, clearFilters } from \"../../redux/actions/actions\";\nimport Navbar from \"../../components/navbar/navbar.component\";\nimport Cards from \"../../components/cards/cards.component\";\nimport Menu from \"../../components/menu/menu.component\";\nimport \"./home.styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const dispatch = useDispatch();\n  const filters = useSelector(state => state.filters);\n  const allCountries = useSelector(state => state.allCountries);\n  const allActivities = useSelector(state => state.allActivities);\n  const [searchString, setSearchString] = useState(\"\");\n  const [filtered, setFiltered] = useState(allCountries);\n  function handleSubmit(e) {\n    let paisesFiltrados = [];\n    e.preventDefault();\n    if (e.target.id === 'busqueda') {\n      setSearchString(e.target.value);\n      if (!paisesFiltrados.length) allCountries.forEach(country => {\n        if (country.name.toLowerCase().includes(e.target.value.toLowerCase())) paisesFiltrados.push(country);\n      });\n    }\n    setFiltered(paisesFiltrados);\n\n    // if (e.target.id === 'continent' && e.target.value !== 'allContinents') {\n\n    //     if(paisesFiltrados.length > 1){\n    //         let temporal = [];\n    //         paisesFiltrados.forEach(country => {\n    //             if (country.continent.includes(e.target.value)) {\n    //                 temporal.push(country)\n    //             }\n    //         });\n    //         paisesFiltrados = temporal\n    //     } else {\n    //         let temporal = [];\n    //         allCountries.forEach(country => {\n    //             if (country.continent.includes(e.target.value)) {\n    //                 temporal.push(country)\n    //             }\n    //         });\n    //         paisesFiltrados = temporal\n    //     }\n    // }\n    // setFiltered(paisesFiltrados)\n\n    if (e.target.id === 'continent' && e.target.value !== \"allContinents\") {\n      let paisesFiltradosPorContinente = [];\n      switch (e.target.value) {\n        case \"South America\":\n          let temporal = [];\n          filtered.forEach(country => {\n            if (country.continent.includes(e.target.value)) {\n              temporal.push(country);\n            }\n          });\n          paisesFiltradosPorContinente = temporal;\n          break;\n        case \"Z-A\":\n          paisesFiltradosPorContinente = filtered.sort((a, b) => b.name.localeCompare(a.name));\n          break;\n        case \"Ascendente\":\n          paisesFiltradosPorContinente = filtered.sort((a, b) => b.population - a.population);\n          break;\n        case \"Descendente\":\n          paisesFiltradosPorContinente = filtered.sort((a, b) => a.population - b.population);\n          break;\n        default:\n          return null;\n          // paisesOrdenados = filtered.sort((a, b) => a.name.localeCompare(b.name));\n          break;\n      }\n      console.log(filtered);\n      setFiltered(paisesFiltradosPorContinente);\n    }\n    if (e.target.id === 'activity' && e.target.value !== 'allActivities') {\n      let paisesConActividades = [];\n      let activity = allActivities.find(activity => activity.name === e.target.value);\n      for (let i = 0; i < allActivities.length; i++) {\n        // paisesConActividades queda como un array de arrays que contienen los países con actividades\n        paisesConActividades.push(allActivities[i].country);\n      }\n      let paisesConActividadesSeparados = [];\n      paisesConActividades.forEach(array => {\n        // paisesConActividadesSeparados queda como un array que incluye solo el nombre de los países con actividades\n        for (let i = 0; i < array.length; i++) {\n          paisesConActividadesSeparados.push(array[i]);\n        }\n      });\n      let paisesParaMostrar = [];\n      for (let i = 0; i < paisesConActividadesSeparados.length; i++) {\n        // paisesParaMostrar queda como un array que contiene los objetos de los paises con actividades turisticas\n        allCountries.forEach(country => {\n          if (country.name === paisesConActividadesSeparados[i]) {\n            paisesParaMostrar.push(country);\n          }\n        });\n      }\n      let paisesRenderizados = [];\n      for (let i = 0; i < activity.country.length; i++) {\n        // paisesFiltrados queda como un array con los paises con las actividades para renderizar\n        paisesParaMostrar.forEach(country => {\n          if (country.name === activity.country[i]) paisesRenderizados.push(country);\n        });\n      }\n      paisesFiltrados = paisesRenderizados;\n    }\n    setFiltered(paisesFiltrados);\n    if (e.target.id === 'order' && e.target.value !== \"\") {\n      let paisesOrdenados = [];\n      switch (e.target.value) {\n        case \"A-Z\":\n          paisesOrdenados = filtered.sort((a, b) => a.name.localeCompare(b.name));\n          break;\n        case \"Z-A\":\n          paisesOrdenados = filtered.sort((a, b) => b.name.localeCompare(a.name));\n          break;\n        case \"Ascendente\":\n          paisesOrdenados = filtered.sort((a, b) => b.population - a.population);\n          break;\n        case \"Descendente\":\n          paisesOrdenados = filtered.sort((a, b) => a.population - b.population);\n          break;\n        default:\n          paisesOrdenados = filtered.sort((a, b) => a.name.localeCompare(b.name));\n          break;\n      }\n      setFiltered(paisesOrdenados);\n    }\n  }\n  if (searchString) dispatch(getCurrentPages(filtered));\n  if (!searchString && filtered) dispatch(getCurrentPages(filtered));\n  useEffect(() => {\n    if (allCountries) {\n      setFiltered(allCountries);\n      dispatch(getCurrentPages(filtered));\n    }\n  }, [allCountries]);\n  useEffect(() => {\n    if (!allCountries) {\n      dispatch(getCountries());\n    }\n    dispatch(getByName(searchString));\n    dispatch(clearFilters());\n    setFiltered(allCountries);\n    dispatch(getCurrentPages(allCountries));\n    // return (() => {\n    //     clearDetail()          // completar\n    // })\n  }, [dispatch]);\n  console.log(filters);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Home-title\",\n      children: \"PI Countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/landing\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"backToLanding\",\n        children: \"Volver a la landing Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), filtered ? /*#__PURE__*/_jsxDEV(Cards, {\n      allCountries: filtered\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Cards, {\n      allCountries: allCountries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"7Cza/DNzJAkLkFAA99CF9uqFFis=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","Link","getByName","getCountries","getCurrentPages","clearFilters","Navbar","Cards","Menu","jsxDEV","_jsxDEV","Home","_s","dispatch","filters","state","allCountries","allActivities","searchString","setSearchString","filtered","setFiltered","handleSubmit","e","paisesFiltrados","preventDefault","target","id","value","length","forEach","country","name","toLowerCase","includes","push","paisesFiltradosPorContinente","temporal","continent","sort","a","b","localeCompare","population","console","log","paisesConActividades","activity","find","i","paisesConActividadesSeparados","array","paisesParaMostrar","paisesRenderizados","paisesOrdenados","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["H:/Programación/Henry/PI-Countries/PI-Countries-main/PI-Countries-main/client/src/views/home/home.component.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getByName, getCountries, getCurrentPages, clearFilters, } from \"../../redux/actions/actions\";\r\nimport Navbar from \"../../components/navbar/navbar.component\";\r\nimport Cards from \"../../components/cards/cards.component\";\r\nimport Menu from \"../../components/menu/menu.component\";\r\nimport \"./home.styles.css\";\r\n\r\nfunction Home() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const filters = useSelector((state) => state.filters);\r\n\r\n    const allCountries = useSelector((state) => state.allCountries);\r\n\r\n    const allActivities = useSelector((state) => state.allActivities);\r\n\r\n    const [searchString, setSearchString] = useState(\"\");\r\n\r\n    const [filtered, setFiltered] = useState(allCountries);\r\n\r\n    function handleSubmit(e) {\r\n        let paisesFiltrados = [];\r\n        e.preventDefault();\r\n\r\n        if (e.target.id === 'busqueda') {\r\n            setSearchString(e.target.value)\r\n            if (!paisesFiltrados.length)\r\n                allCountries.forEach(country => {\r\n                    if (country.name.toLowerCase().includes(e.target.value.toLowerCase()))\r\n                        paisesFiltrados.push(country)\r\n                })\r\n        }\r\n        setFiltered(paisesFiltrados)\r\n\r\n        // if (e.target.id === 'continent' && e.target.value !== 'allContinents') {\r\n\r\n        //     if(paisesFiltrados.length > 1){\r\n        //         let temporal = [];\r\n        //         paisesFiltrados.forEach(country => {\r\n        //             if (country.continent.includes(e.target.value)) {\r\n        //                 temporal.push(country)\r\n        //             }\r\n        //         });\r\n        //         paisesFiltrados = temporal\r\n        //     } else {\r\n        //         let temporal = [];\r\n        //         allCountries.forEach(country => {\r\n        //             if (country.continent.includes(e.target.value)) {\r\n        //                 temporal.push(country)\r\n        //             }\r\n        //         });\r\n        //         paisesFiltrados = temporal\r\n        //     }\r\n        // }\r\n        // setFiltered(paisesFiltrados)\r\n\r\n        if (e.target.id === 'continent' && e.target.value !== \"allContinents\") {\r\n            let paisesFiltradosPorContinente = [];\r\n            switch (e.target.value) {\r\n                case \"South America\":\r\n                    let temporal = [];\r\n                    filtered.forEach(country => {\r\n                        if (country.continent.includes(e.target.value)) {\r\n                            temporal.push(country)\r\n                        }\r\n                    });\r\n                    paisesFiltradosPorContinente = temporal\r\n                    break;\r\n                    case \"Z-A\":\r\n                        paisesFiltradosPorContinente = filtered.sort((a, b) => b.name.localeCompare(a.name))\r\n                        break;\r\n                        case \"Ascendente\":\r\n                            paisesFiltradosPorContinente = filtered.sort((a, b) => b.population - a.population);\r\n                            break;\r\n                            case \"Descendente\":\r\n                    paisesFiltradosPorContinente = filtered.sort((a, b) => a.population - b.population);\r\n                    break;\r\n                    default: return null;\r\n                    // paisesOrdenados = filtered.sort((a, b) => a.name.localeCompare(b.name));\r\n                    break;\r\n                }\r\n                console.log(filtered);\r\n                setFiltered(paisesFiltradosPorContinente)\r\n        }\r\n\r\n        if (e.target.id === 'activity' && e.target.value !== 'allActivities') {\r\n            let paisesConActividades = []\r\n            let activity = allActivities.find(activity => activity.name === e.target.value);\r\n\r\n            for (let i = 0; i < allActivities.length; i++) {  // paisesConActividades queda como un array de arrays que contienen los países con actividades\r\n                paisesConActividades.push(allActivities[i].country)\r\n            }\r\n\r\n            let paisesConActividadesSeparados = [];\r\n\r\n            paisesConActividades.forEach(array => {// paisesConActividadesSeparados queda como un array que incluye solo el nombre de los países con actividades\r\n                for (let i = 0; i < array.length; i++) {\r\n                    paisesConActividadesSeparados.push(array[i])\r\n                }\r\n            })\r\n\r\n            let paisesParaMostrar = [];\r\n\r\n            for (let i = 0; i < paisesConActividadesSeparados.length; i++) { // paisesParaMostrar queda como un array que contiene los objetos de los paises con actividades turisticas\r\n                allCountries.forEach(country => {\r\n                    if (country.name === paisesConActividadesSeparados[i]) {\r\n                        paisesParaMostrar.push(country)\r\n                    }\r\n                })\r\n            }\r\n\r\n            let paisesRenderizados = [];\r\n\r\n            for (let i = 0; i < activity.country.length; i++) { // paisesFiltrados queda como un array con los paises con las actividades para renderizar\r\n                paisesParaMostrar.forEach(country => {\r\n                    if (country.name === activity.country[i])\r\n                        paisesRenderizados.push(country)\r\n                })\r\n            }\r\n            paisesFiltrados = paisesRenderizados\r\n        }\r\n        setFiltered(paisesFiltrados)\r\n\r\n        if (e.target.id === 'order' && e.target.value !== \"\") {\r\n            let paisesOrdenados = [];\r\n            switch (e.target.value) {\r\n                case \"A-Z\":\r\n                    paisesOrdenados = filtered.sort((a, b) => a.name.localeCompare(b.name));\r\n                    break;\r\n                case \"Z-A\":\r\n                    paisesOrdenados = filtered.sort((a, b) => b.name.localeCompare(a.name))\r\n                    break;\r\n                case \"Ascendente\":\r\n                    paisesOrdenados = filtered.sort((a, b) => b.population - a.population);\r\n                    break;\r\n                case \"Descendente\":\r\n                    paisesOrdenados = filtered.sort((a, b) => a.population - b.population);\r\n                    break;\r\n                default:\r\n                    paisesOrdenados = filtered.sort((a, b) => a.name.localeCompare(b.name));\r\n                    break;\r\n            }\r\n            setFiltered(paisesOrdenados)\r\n        }\r\n    }\r\n\r\n    if (searchString) dispatch(getCurrentPages(filtered))\r\n    if (!searchString && filtered) dispatch(getCurrentPages(filtered))\r\n\r\n    useEffect(() => {\r\n        if (allCountries) {\r\n            setFiltered(allCountries)\r\n            dispatch(getCurrentPages(filtered))\r\n        }\r\n    }, [allCountries])\r\n\r\n    useEffect(() => {\r\n        if (!allCountries) {\r\n            dispatch(getCountries())\r\n        }\r\n        dispatch(getByName(searchString));\r\n        dispatch(clearFilters());\r\n        setFiltered(allCountries)\r\n        dispatch(getCurrentPages(allCountries))\r\n        // return (() => {\r\n        //     clearDetail()          // completar\r\n        // })\r\n    }, [dispatch])\r\n    console.log(filters);\r\n    return (\r\n        <div className=\"Home\">\r\n            <h2 className=\"Home-title\">PI Countries</h2>\r\n            <Link to=\"/landing\">\r\n                <button className=\"backToLanding\">Volver a la landing Page</button>\r\n            </Link>\r\n\r\n            <Navbar handleSubmit={handleSubmit} />\r\n\r\n            <Menu />\r\n\r\n            {filtered ?\r\n                <Cards allCountries={filtered} />\r\n                : <Cards allCountries={allCountries} />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}