{"ast":null,"code":"import axios from \"axios\";\nexport const GET_COUNTRIES = \"GET_COUNTRIES\";\nexport const GET_BY_NAME = \"GET_BY_NAME\";\nexport const GET_COUNTRY_DETAIL = \"GET_COUNTRY_DETAIL\";\nexport const CLEAR_DETAIL = \"CLEAR_DETAIL\";\nexport const GET_CURRENT_PAGES = \"GET_CURRENT_PAGES\";\nexport const INCREASE_PAGE = \"INCREASE_PAGE\";\nexport const DECREASE_PAGE = \"DECREASE_PAGE\";\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\nexport const FILTER_CHANGE_VALUE = \"FILTER_CHANGE_VALUE\";\nexport const FILTER_COUNTRIES = \"FILTER_COUNTRIES\";\nexport const CLEAR_FILTERS = \"CLEAR_FILTERS\";\nexport function getCountries() {\n  return async function (dispatch) {\n    try {\n      const response = await axios(\"http://localhost:3001/countries\");\n      return dispatch({\n        type: GET_COUNTRIES,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error);\n      throw new Error('No se pudieron obtener los países');\n    }\n  };\n}\nexport function getByName(name) {\n  return async function (dispatch) {\n    try {\n      const response = await axios(`http://localhost:3001/countries?search=${name}`);\n      return dispatch({\n        type: GET_BY_NAME,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error);\n      throw new Error('No se encontró el país solicitado');\n    }\n  };\n}\nexport function getCountryDetail(id) {\n  return async function (dispatch) {\n    try {\n      if (id) {\n        const response = await await axios.get(`http://localhost:3001/countries/${id}`);\n        dispatch({\n          type: GET_COUNTRY_DETAIL,\n          payload: response.data[0]\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function clearyDetail(id) {}\nexport function getCurrentPages(currentPages) {}\nexport function restartCurrentPage(allCountries) {}\nexport const filterCountries = (allCountries, _ref) => {\n  let {} = _ref;\n};\nexport function changePage(page) {}\nexport function increasePage() {}\nexport function decreasePage() {}\nexport const filterChangeValue = (property, value) => {};\nexport const clearFilters = () => {};","map":{"version":3,"names":["axios","GET_COUNTRIES","GET_BY_NAME","GET_COUNTRY_DETAIL","CLEAR_DETAIL","GET_CURRENT_PAGES","INCREASE_PAGE","DECREASE_PAGE","CHANGE_PAGE","FILTER_CHANGE_VALUE","FILTER_COUNTRIES","CLEAR_FILTERS","getCountries","dispatch","response","type","payload","data","error","console","log","Error","getByName","name","getCountryDetail","id","get","clearyDetail","getCurrentPages","currentPages","restartCurrentPage","allCountries","filterCountries","_ref","changePage","page","increasePage","decreasePage","filterChangeValue","property","value","clearFilters"],"sources":["H:/Programación/Henry/PI-Countries/PI-Countries-main/PI-Countries-main/client/src/redux/actions/actions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const GET_COUNTRIES = \"GET_COUNTRIES\";\r\nexport const GET_BY_NAME = \"GET_BY_NAME\";\r\nexport const GET_COUNTRY_DETAIL = \"GET_COUNTRY_DETAIL\";\r\nexport const CLEAR_DETAIL = \"CLEAR_DETAIL\";\r\nexport const GET_CURRENT_PAGES = \"GET_CURRENT_PAGES\";\r\nexport const INCREASE_PAGE = \"INCREASE_PAGE\";\r\nexport const DECREASE_PAGE = \"DECREASE_PAGE\";\r\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\r\nexport const FILTER_CHANGE_VALUE = \"FILTER_CHANGE_VALUE\";\r\nexport const FILTER_COUNTRIES = \"FILTER_COUNTRIES\";\r\nexport const CLEAR_FILTERS = \"CLEAR_FILTERS\";\r\n\r\nexport function getCountries() {\r\n    return async function (dispatch) {\r\n        try {\r\n            const response = await axios(\"http://localhost:3001/countries\");\r\n            return dispatch({\r\n                type: GET_COUNTRIES,\r\n                payload: response.data\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            throw new Error('No se pudieron obtener los países')\r\n        }\r\n    }\r\n}\r\n\r\nexport function getByName(name) {\r\n    return async function (dispatch) {\r\n        try {\r\n            const response = await axios(`http://localhost:3001/countries?search=${name}`);\r\n            return dispatch({\r\n                type: GET_BY_NAME,\r\n                payload: response.data\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw new Error('No se encontró el país solicitado')\r\n        }\r\n    }\r\n}\r\n\r\nexport function getCountryDetail(id) {\r\n    return async function (dispatch) {\r\n        try {\r\n            if (id) {\r\n                const response = await (await axios.get(`http://localhost:3001/countries/${id}`));\r\n                dispatch({ \r\n                    type: GET_COUNTRY_DETAIL,\r\n                    payload: response.data[0]\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport function clearyDetail(id) {\r\n\r\n}\r\n\r\nexport function getCurrentPages(currentPages) {\r\n\r\n}\r\n\r\nexport function restartCurrentPage(allCountries) {\r\n\r\n}\r\n\r\nexport const filterCountries = (allCountries, { }) => {\r\n\r\n}\r\n\r\nexport function changePage(page) {\r\n\r\n}\r\n\r\nexport function increasePage() {\r\n\r\n}\r\n\r\nexport function decreasePage() {\r\n\r\n}\r\n\r\nexport const filterChangeValue = (property, value) => {\r\n\r\n}\r\nexport const clearFilters = () => {\r\n\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,kBAAkB,GAAG,oBAAoB;AACtD,OAAO,MAAMC,YAAY,GAAG,cAAc;AAC1C,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,aAAa,GAAG,eAAe;AAE5C,OAAO,SAASC,YAAYA,CAAA,EAAG;EAC3B,OAAO,gBAAgBC,QAAQ,EAAE;IAC7B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAAC,iCAAiC,CAAC;MAC/D,OAAOa,QAAQ,CAAC;QACZE,IAAI,EAAEd,aAAa;QACnBe,OAAO,EAAEF,QAAQ,CAACG;MACtB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAM,IAAIG,KAAK,CAAC,mCAAmC,CAAC;IACxD;EACJ,CAAC;AACL;AAEA,OAAO,SAASC,SAASA,CAACC,IAAI,EAAE;EAC5B,OAAO,gBAAgBV,QAAQ,EAAE;IAC7B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAAE,0CAAyCuB,IAAK,EAAC,CAAC;MAC9E,OAAOV,QAAQ,CAAC;QACZE,IAAI,EAAEb,WAAW;QACjBc,OAAO,EAAEF,QAAQ,CAACG;MACtB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAM,IAAIG,KAAK,CAAC,mCAAmC,CAAC;IACxD;EACJ,CAAC;AACL;AAEA,OAAO,SAASG,gBAAgBA,CAACC,EAAE,EAAE;EACjC,OAAO,gBAAgBZ,QAAQ,EAAE;IAC7B,IAAI;MACA,IAAIY,EAAE,EAAE;QACJ,MAAMX,QAAQ,GAAG,MAAO,MAAMd,KAAK,CAAC0B,GAAG,CAAE,mCAAkCD,EAAG,EAAC,CAAE;QACjFZ,QAAQ,CAAC;UACLE,IAAI,EAAEZ,kBAAkB;UACxBa,OAAO,EAAEF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;AACL;AAEA,OAAO,SAASS,YAAYA,CAACF,EAAE,EAAE,CAEjC;AAEA,OAAO,SAASG,eAAeA,CAACC,YAAY,EAAE,CAE9C;AAEA,OAAO,SAASC,kBAAkBA,CAACC,YAAY,EAAE,CAEjD;AAEA,OAAO,MAAMC,eAAe,GAAGA,CAACD,YAAY,EAAAE,IAAA,KAAU;EAAA,IAAR,CAAE,CAAC,GAAAA,IAAA;AAEjD,CAAC;AAED,OAAO,SAASC,UAAUA,CAACC,IAAI,EAAE,CAEjC;AAEA,OAAO,SAASC,YAAYA,CAAA,EAAG,CAE/B;AAEA,OAAO,SAASC,YAAYA,CAAA,EAAG,CAE/B;AAEA,OAAO,MAAMC,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK,CAEtD,CAAC;AACD,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM,CAElC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}