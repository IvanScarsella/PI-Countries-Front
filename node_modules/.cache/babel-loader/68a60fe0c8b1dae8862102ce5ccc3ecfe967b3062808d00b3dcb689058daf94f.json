{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { createActivity, changePage /* getGenres, getPlatforms */ } from \"../../redux/actions/actions\";\n// import \"./create.styles.css\";\n\nfunction Create() {\n  _s();\n  const [input, setInput] = useState({\n    name: \"\",\n    difficulty: \"\",\n    duration: \"\",\n    season: \"\",\n    country: []\n  });\n  const [error, setError] = useState({\n    name: \"\",\n    difficulty: \"\",\n    duration: \"\",\n    season: \"\",\n    country: []\n  });\n  const validate = input => {\n    let error = {};\n    const regexName = new RegExp('^[A-Za-z0-9 ]+$', 'i');\n    if (!input.name) {\n      error.name = \"Inserte un nombre\";\n    }\n    if (input.name.length > 40) {\n      error.name = \"El nombre debe tener menos de 40 caracteres\";\n    }\n    if (!regexName.test(input.name)) {\n      error.name = \"el nombre debe contener solo letras y números\";\n    }\n  };\n}\n_s(Create, \"4JuZZiiEx9EOs7CQEgyN9fmbBrM=\");\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["useState","useEffect","useDispatch","useSelector","Link","createActivity","changePage","Create","_s","input","setInput","name","difficulty","duration","season","country","error","setError","validate","regexName","RegExp","length","test","_c","$RefreshReg$"],"sources":["H:/Programación/Henry/PI-Countries/PI-Countries-main/PI-Countries-main/client/src/views/create/create.component.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createActivity, changePage, /* getGenres, getPlatforms */} from \"../../redux/actions/actions\";\r\n// import \"./create.styles.css\";\r\n\r\nfunction Create() {\r\n    const [input, setInput] = useState({\r\n        name: \"\",\r\n        difficulty: \"\",\r\n        duration: \"\",\r\n        season: \"\",\r\n        country: [],\r\n    })\r\n\r\n    const [error, setError] = useState({\r\n        name: \"\",\r\n        difficulty: \"\",\r\n        duration: \"\",\r\n        season: \"\",\r\n        country: []\r\n    })\r\n\r\n    const validate = (input) => {\r\n        let error = {}\r\n        const regexName = new RegExp('^[A-Za-z0-9 ]+$', 'i');\r\n        if(!input.name) {\r\n            error.name = \"Inserte un nombre\"\r\n        } if (input.name.length > 40) {\r\n            error.name = \"El nombre debe tener menos de 40 caracteres\"\r\n        } if (!regexName.test(input.name)) {\r\n            error.name = \"el nombre debe contener solo letras y números\"\r\n        }\r\n    }\r\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,cAAc,EAAEC,UAAU,CAAE,qCAAoC,6BAA6B;AACtG;;AAEA,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC;IAC/BW,IAAI,EAAE,EAAE;IACRC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC;IAC/BW,IAAI,EAAE,EAAE;IACRC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,MAAMG,QAAQ,GAAIT,KAAK,IAAK;IACxB,IAAIO,KAAK,GAAG,CAAC,CAAC;IACd,MAAMG,SAAS,GAAG,IAAIC,MAAM,CAAC,iBAAiB,EAAE,GAAG,CAAC;IACpD,IAAG,CAACX,KAAK,CAACE,IAAI,EAAE;MACZK,KAAK,CAACL,IAAI,GAAG,mBAAmB;IACpC;IAAE,IAAIF,KAAK,CAACE,IAAI,CAACU,MAAM,GAAG,EAAE,EAAE;MAC1BL,KAAK,CAACL,IAAI,GAAG,6CAA6C;IAC9D;IAAE,IAAI,CAACQ,SAAS,CAACG,IAAI,CAACb,KAAK,CAACE,IAAI,CAAC,EAAE;MAC/BK,KAAK,CAACL,IAAI,GAAG,+CAA+C;IAChE;EACJ,CAAC;AACL;AAACH,EAAA,CA5BQD,MAAM;AAAAgB,EAAA,GAANhB,MAAM;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}