{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCurrentPages, restartCurrentPage, clearFilters, filterChangeValue, filterCountries, getCountries /* getGenres, getPaltforms */ } from \"../../redux/actions/actions\";\nimport \"..filter/filter.styles.css\";\nexport default function FilterBy() {\n  _s();\n  const [flagExecuteFilterCountries, setFlagExecuteFilterCountries] = useState(false);\n  let {\n    allCountries,\n    filters,\n    page,\n    pages /* apiPlatforms, apiGenres */\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const handleChangeValue = e => {\n    dispatch(filterChangeValue(e.target.name, e.target.value));\n    setFlagExecuteFilterCountries(prev => !prev);\n  };\n  useEffect(() => {\n    dispatch(getCountries());\n    // dispatch(getPlarforms())\n    dispatch(filterCountries(allCountries.filters));\n  }, [dispatch, allCountries, filters, flagExecuteFilterCountries]);\n  allCountries = useSelector(s => s.allCountries);\n}\n_s(FilterBy, \"pAtJyVMLfHcdAwF4pPuntbGPyco=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n_c = FilterBy;\nvar _c;\n$RefreshReg$(_c, \"FilterBy\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","getCurrentPages","restartCurrentPage","clearFilters","filterChangeValue","filterCountries","getCountries","FilterBy","_s","flagExecuteFilterCountries","setFlagExecuteFilterCountries","allCountries","filters","page","pages","state","dispatch","handleChangeValue","e","target","name","value","prev","s","_c","$RefreshReg$"],"sources":["H:/ProgramaciÃ³n/Henry/PI-Countries/PI-Countries-main/PI-Countries-main/client/src/components/filter/filter.component.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCurrentPages, restartCurrentPage, clearFilters, filterChangeValue, filterCountries, getCountries, /* getGenres, getPaltforms */ } from \"../../redux/actions/actions\";\r\nimport \"..filter/filter.styles.css\";\r\n\r\nexport default function FilterBy () {\r\n    const [flagExecuteFilterCountries, setFlagExecuteFilterCountries] = useState(false);\r\n\r\n    let { allCountries, filters, page, pages, /* apiPlatforms, apiGenres */} = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChangeValue = (e) => {\r\n        dispatch(filterChangeValue(e.target.name, e.target.value))\r\n        setFlagExecuteFilterCountries(prev => !prev)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getCountries())\r\n        // dispatch(getPlarforms())\r\n        dispatch(filterCountries(allCountries. filters))\r\n    }, [dispatch, allCountries, filters, flagExecuteFilterCountries])\r\n\r\n    allCountries = useSelector(s => s.allCountries)\r\n\r\n    \r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,EAAEC,kBAAkB,EAAEC,YAAY,EAAEC,iBAAiB,EAAEC,eAAe,EAAEC,YAAY,CAAE,qCAAqC,6BAA6B;AAChL,OAAO,4BAA4B;AAEnC,eAAe,SAASC,QAAQA,CAAA,EAAI;EAAAC,EAAA;EAChC,MAAM,CAACC,0BAA0B,EAAEC,6BAA6B,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnF,IAAI;IAAEa,YAAY;IAAEC,OAAO;IAAEC,IAAI;IAAEC,KAAK,CAAE;EAA6B,CAAC,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAAC;EACtG,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9B,MAAMkB,iBAAiB,GAAIC,CAAC,IAAK;IAC7BF,QAAQ,CAACZ,iBAAiB,CAACc,CAAC,CAACC,MAAM,CAACC,IAAI,EAAEF,CAAC,CAACC,MAAM,CAACE,KAAK,CAAC,CAAC;IAC1DX,6BAA6B,CAACY,IAAI,IAAI,CAACA,IAAI,CAAC;EAChD,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACZmB,QAAQ,CAACV,YAAY,CAAC,CAAC,CAAC;IACxB;IACAU,QAAQ,CAACX,eAAe,CAACM,YAAY,CAAEC,OAAO,CAAC,CAAC;EACpD,CAAC,EAAE,CAACI,QAAQ,EAAEL,YAAY,EAAEC,OAAO,EAAEH,0BAA0B,CAAC,CAAC;EAEjEE,YAAY,GAAGX,WAAW,CAACuB,CAAC,IAAIA,CAAC,CAACZ,YAAY,CAAC;AAGnD;AAACH,EAAA,CApBuBD,QAAQ;EAAA,QAG+CP,WAAW,EACrED,WAAW,EAabC,WAAW;AAAA;AAAAwB,EAAA,GAjBNjB,QAAQ;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}