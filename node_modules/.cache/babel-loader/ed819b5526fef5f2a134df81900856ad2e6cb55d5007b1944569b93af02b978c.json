{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getByName, getCountries, getCurrentPages, clearFilters } from \"../../redux/actions/actions\";\nimport Navbar from \"../../components/navbar/navbar.component\";\nimport Cards from \"../../components/cards/cards.component\";\nimport Menu from \"../../components/menu/menu.component\";\nimport \"./home.styles.css\";\nfunction Home() {\n  _s();\n  const dispatch = useDispatch();\n  const allCountries = useSelector(state => state.allCountries);\n  const [searchString, setSearchString] = useState(\"\");\n  const [filtered, setFiltered] = useState(allCountries);\n  function handleSubmit(e) {\n    e.preventDefault();\n    let paisesFiltrados = [];\n    if (e.target.id === 'busqueda') {\n      setSearchString(e.target.value);\n      allCountries.forEach(country => {\n        if (country.name.toLowerCase().includes(e.target.value.toLowerCase())) paisesFiltrados.push(country);\n      });\n    }\n    setFiltered(paisesFiltrados);\n\n    // if (e.target.id === 'genre' && e.target.value !== 'allGenres') {\n    //     let temporal = [];\n    //     filtered.forEach(element => {\n    //         if (element.genres.includes(e.target.value)) {\n    //             temporal.push(element)\n    //         }\n    //     });\n    //     paisesFiltrados = temporal\n    // }\n    // setFiltered(paisesFiltrados)\n\n    // if ((e.target.id === 'platform') && (e.target.value !== 'allPlatforms')) { // filtro por plataforma\n    //     let temporal = []\n    //     filtered.forEach(element => {\n    //       if (element.platforms.includes(e.target.value)) {\n    //         temporal.push(element)\n    //       }\n    //     });\n    //     juegosFiltrados = temporal\n    //   }\n    //   setFiltered(juegosFiltrados)\n\n    // if((e.target.id === 'originData') && (e.target.value !== 'allOrigins')) {\n    //     let temporal = []\n    //     filtered.forEach(element => {\n    //         if (element.created === true) {\n    //             temporal.push(element)\n    //         }\n    //     });\n    //     paisesFiltrados = temporal\n    // }\n    // setFiltered(paisesFiltrados)\n  }\n\n  useEffect(() => {\n    if (allCountries) {\n      setFiltered(allCountries);\n      dispatch(getCurrentPages(filtered));\n    }\n  }, [allCountries]);\n  useEffect(() => {\n    dispatch(getCountries());\n    dispatch(getByName(searchString));\n    dispatch(getCountries());\n    dispatch(clearFilters());\n    // return (() => {\n    //     clearDetail()          // completar\n    // })\n  }, [dispatch]);\n  console.log(\"holaaaaaaaaaaaaaa\");\n  return;\n  // (\n  //     <div className=\"Home\">\n  //         <h2 className=\"Home-title\">PI Countries</h2>\n  //         <Link to=\"/landing\">\n  //             <button className=\"backToLanding\">Volver a la landing Page</button>\n  //         </Link>\n\n  //         <Navbar handleSubmit={handleSubmit} />\n\n  //         <Menu />\n\n  //         {filtered ?\n  //             <Cards allCountries={filtered} />\n  //             : <Cards allCountries={allCountries} />\n  //         }\n  //     </div>\n  // );\n}\n_s(Home, \"vDT7vuCgXpoD2qeZPxg1bdkIfnU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","Link","getByName","getCountries","getCurrentPages","clearFilters","Navbar","Cards","Menu","Home","_s","dispatch","allCountries","state","searchString","setSearchString","filtered","setFiltered","handleSubmit","e","preventDefault","paisesFiltrados","target","id","value","forEach","country","name","toLowerCase","includes","push","console","log","_c","$RefreshReg$"],"sources":["H:/ProgramaciÃ³n/Henry/PI-Countries/PI-Countries-main/PI-Countries-main/client/src/views/home/home.component.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getByName, getCountries, getCurrentPages, clearFilters } from \"../../redux/actions/actions\";\r\nimport Navbar from \"../../components/navbar/navbar.component\";\r\nimport Cards from \"../../components/cards/cards.component\";\r\nimport Menu from \"../../components/menu/menu.component\";\r\nimport \"./home.styles.css\";\r\n\r\nfunction Home() {\r\n\r\n    const dispatch = useDispatch();\r\n    const allCountries = useSelector((state) => state.allCountries);\r\n\r\n    const [searchString, setSearchString] = useState(\"\");\r\n\r\n    const [filtered, setFiltered] = useState(allCountries);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        let paisesFiltrados = [];\r\n\r\n        if (e.target.id === 'busqueda') {\r\n            setSearchString(e.target.value)\r\n\r\n            allCountries.forEach(country => {\r\n                if (country.name.toLowerCase().includes(e.target.value.toLowerCase()))\r\n                    paisesFiltrados.push(country)\r\n            })\r\n        }\r\n        setFiltered(paisesFiltrados)\r\n\r\n        // if (e.target.id === 'genre' && e.target.value !== 'allGenres') {\r\n        //     let temporal = [];\r\n        //     filtered.forEach(element => {\r\n        //         if (element.genres.includes(e.target.value)) {\r\n        //             temporal.push(element)\r\n        //         }\r\n        //     });\r\n        //     paisesFiltrados = temporal\r\n        // }\r\n        // setFiltered(paisesFiltrados)\r\n\r\n        // if ((e.target.id === 'platform') && (e.target.value !== 'allPlatforms')) { // filtro por plataforma\r\n        //     let temporal = []\r\n        //     filtered.forEach(element => {\r\n        //       if (element.platforms.includes(e.target.value)) {\r\n        //         temporal.push(element)\r\n        //       }\r\n        //     });\r\n        //     juegosFiltrados = temporal\r\n        //   }\r\n        //   setFiltered(juegosFiltrados)\r\n\r\n        // if((e.target.id === 'originData') && (e.target.value !== 'allOrigins')) {\r\n        //     let temporal = []\r\n        //     filtered.forEach(element => {\r\n        //         if (element.created === true) {\r\n        //             temporal.push(element)\r\n        //         }\r\n        //     });\r\n        //     paisesFiltrados = temporal\r\n        // }\r\n        // setFiltered(paisesFiltrados)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (allCountries) {\r\n            setFiltered(allCountries)\r\n            dispatch(getCurrentPages(filtered))\r\n        }\r\n    }, [allCountries])\r\n\r\n    useEffect(() => {\r\n        dispatch(getCountries());\r\n        dispatch(getByName(searchString));\r\n        dispatch(getCountries());\r\n        dispatch(clearFilters());\r\n        // return (() => {\r\n        //     clearDetail()          // completar\r\n        // })\r\n    }, [dispatch])\r\nconsole.log(\"holaaaaaaaaaaaaaa\");\r\n    return \r\n    // (\r\n    //     <div className=\"Home\">\r\n    //         <h2 className=\"Home-title\">PI Countries</h2>\r\n    //         <Link to=\"/landing\">\r\n    //             <button className=\"backToLanding\">Volver a la landing Page</button>\r\n    //         </Link>\r\n\r\n    //         <Navbar handleSubmit={handleSubmit} />\r\n\r\n    //         <Menu />\r\n\r\n    //         {filtered ?\r\n    //             <Cards allCountries={filtered} />\r\n    //             : <Cards allCountries={allCountries} />\r\n    //         }\r\n    //     </div>\r\n    // );\r\n}\r\n\r\nexport default Home;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,EAAEC,YAAY,EAAEC,eAAe,EAAEC,YAAY,QAAQ,6BAA6B;AACpG,OAAOC,MAAM,MAAM,0CAA0C;AAC7D,OAAOC,KAAK,MAAM,wCAAwC;AAC1D,OAAOC,IAAI,MAAM,sCAAsC;AACvD,OAAO,mBAAmB;AAE1B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEZ,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,YAAY,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACD,YAAY,CAAC;EAE/D,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAACc,YAAY,CAAC;EAEtD,SAASM,YAAYA,CAACC,CAAC,EAAE;IACrBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIC,eAAe,GAAG,EAAE;IAExB,IAAIF,CAAC,CAACG,MAAM,CAACC,EAAE,KAAK,UAAU,EAAE;MAC5BR,eAAe,CAACI,CAAC,CAACG,MAAM,CAACE,KAAK,CAAC;MAE/BZ,YAAY,CAACa,OAAO,CAACC,OAAO,IAAI;QAC5B,IAAIA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,CAAC,CAACG,MAAM,CAACE,KAAK,CAACI,WAAW,CAAC,CAAC,CAAC,EACjEP,eAAe,CAACS,IAAI,CAACJ,OAAO,CAAC;MACrC,CAAC,CAAC;IACN;IACAT,WAAW,CAACI,eAAe,CAAC;;IAE5B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;;EAEAxB,SAAS,CAAC,MAAM;IACZ,IAAIe,YAAY,EAAE;MACdK,WAAW,CAACL,YAAY,CAAC;MACzBD,QAAQ,CAACP,eAAe,CAACY,QAAQ,CAAC,CAAC;IACvC;EACJ,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElBf,SAAS,CAAC,MAAM;IACZc,QAAQ,CAACR,YAAY,CAAC,CAAC,CAAC;IACxBQ,QAAQ,CAACT,SAAS,CAACY,YAAY,CAAC,CAAC;IACjCH,QAAQ,CAACR,YAAY,CAAC,CAAC,CAAC;IACxBQ,QAAQ,CAACN,YAAY,CAAC,CAAC,CAAC;IACxB;IACA;IACA;EACJ,CAAC,EAAE,CAACM,QAAQ,CAAC,CAAC;EAClBoB,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;AACJ;AAACtB,EAAA,CA5FQD,IAAI;EAAA,QAEQV,WAAW,EACPC,WAAW;AAAA;AAAAiC,EAAA,GAH3BxB,IAAI;AA8Fb,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}