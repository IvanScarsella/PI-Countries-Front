{"ast":null,"code":"var _jsxFileName = \"H:\\\\Programaci\\xF3n\\\\Henry\\\\PI-Countries\\\\PI-Countries-main\\\\PI-Countries-main\\\\client\\\\src\\\\components\\\\cards\\\\cards.component.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport Card from \"../card/card.component\";\nimport './cards.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cards(_ref) {\n  _s();\n  let {\n    allCountries\n  } = _ref;\n  const {\n    page\n  } = useSelector(state => state);\n  const countriesList = allCountries.slice((page - 1) * 10, page * 10);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-list\",\n    children: countriesList === null || countriesList === void 0 ? void 0 : countriesList.sort((a, b) => a.name.localeCompare(b.name)).map(country => /*#__PURE__*/_jsxDEV(Card, {\n      country: country\n    }, country.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_s(Cards, \"Y8cPF3CNTp3FUPigcnrSab+Fl9c=\", false, function () {\n  return [useSelector];\n});\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["useSelector","Card","jsxDEV","_jsxDEV","Cards","_ref","_s","allCountries","page","state","countriesList","slice","className","children","sort","a","b","name","localeCompare","map","country","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["H:/ProgramaciÃ³n/Henry/PI-Countries/PI-Countries-main/PI-Countries-main/client/src/components/cards/cards.component.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport Card from \"../card/card.component\";\r\nimport './cards.styles.css';\r\n\r\nfunction Cards({ allCountries }) {\r\n    const { page } = useSelector(state => state)\r\n\r\n    const countriesList = allCountries.slice((page - 1) * 10, page * 10)\r\n\r\n    return (\r\n        <div className=\"card-list\">\r\n            {countriesList?.sort((a, b) => a.name.localeCompare(b.name)).map((country) => (\r\n                <Card country={country} key={country.id} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,KAAKA,CAAAC,IAAA,EAAmB;EAAAC,EAAA;EAAA,IAAlB;IAAEC;EAAa,CAAC,GAAAF,IAAA;EAC3B,MAAM;IAAEG;EAAK,CAAC,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAAC;EAE5C,MAAMC,aAAa,GAAGH,YAAY,CAACI,KAAK,CAAC,CAACH,IAAI,GAAG,CAAC,IAAI,EAAE,EAAEA,IAAI,GAAG,EAAE,CAAC;EAEpE,oBACIL,OAAA;IAAKS,SAAS,EAAC,WAAW;IAAAC,QAAA,EACrBH,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAAC,CAAC,CAACE,GAAG,CAAEC,OAAO,iBACrEjB,OAAA,CAACF,IAAI;MAACmB,OAAO,EAAEA;IAAQ,GAAMA,OAAO,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC7C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACnB,EAAA,CAZQF,KAAK;EAAA,QACOJ,WAAW;AAAA;AAAA0B,EAAA,GADvBtB,KAAK;AAcd,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}